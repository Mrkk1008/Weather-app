{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","App.js","index.js"],"names":["WeatherLogo","styled","img","ChooseCityLabel","span","SearchBox","form","CityComponent","props","updateCity","fetchWeather","src","onSubmit","placeholder","onChange","e","target","value","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","WeatherIcons","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sRAEMA,EAAcC,IAAOC,IAAV,2FAMXC,EAAkBF,IAAOG,KAAV,qHAOfC,EAAYJ,IAAOK,KAAV,0lBAgDAC,EAjBO,SAACC,GAAS,IACrBC,EAA4BD,EAA5BC,WAAYC,EAAgBF,EAAhBE,aACnB,OACI,qCACI,cAACV,EAAD,CAAaW,IAAI,0BACjB,cAACR,EAAD,wCACA,eAACE,EAAD,CAAWO,SAAUF,EAArB,UACI,uBACIG,YAAY,OACZC,SAAU,SAACC,GAAD,OAAKN,EAAWM,EAAEC,OAAOC,UAEvC,wBAAQC,KAAK,SAAb,2B,iBCvDHC,EAAmB,CAC9BC,OAAQ,kBACRC,QAAS,kBACTC,SAAU,sBACVC,KAAM,kBACNC,SAAU,uBAGCC,EAAe,CAC1B,MAAQ,mBACR,MAAO,mBACP,MAAO,iBACP,MAAO,0BACP,MAAO,oBACP,MAAO,oBACP,MAAO,yBACP,MAAO,0BACP,MAAO,kBACP,MAAO,wBACP,OAAQ,kBACR,OAAQ,wBACR,OAAQ,mBACR,OAAQ,oBAGJC,EAAWzB,IAAOG,KAAV,2HAMRuB,EAAY1B,IAAOG,KAAV,4IAQTwB,EAAmB3B,IAAOG,KAAV,qKAQhByB,EAAc5B,IAAOC,IAAV,oFAKX4B,EAAmB7B,IAAO8B,IAAV,uKAShBC,EAAuB/B,IAAO8B,IAAV,mKAQpBE,EAAgBhC,IAAO8B,IAAV,qJAObG,EAAWjC,IAAOC,IAAV,6DAIRiC,EAAYlC,IAAOG,KAAV,sLAWTgC,EAAuB,SAAC5B,GAAW,IAC/B6B,EAAgB7B,EAAhB6B,KAAMpB,EAAUT,EAAVS,MACd,OACE,eAACgB,EAAD,WACE,cAACC,EAAD,CAAUvB,IAAKQ,EAAiBkB,KAChC,eAACF,EAAD,WACGlB,EACD,+BAAOoB,WAmCAC,EA7BU,SAAC9B,GAAW,IAAD,YAGjB+B,EAFVC,EAAWhC,EAAXgC,QACDC,EAAK,OAAGD,QAAH,IAAGA,GAAH,UAAGA,EAASA,QAAQ,GAAGE,YAAvB,aAAG,EAA0BC,SAAS,KAIjD,OACE,qCACE,eAACb,EAAD,WACE,eAACH,EAAD,WACE,yCAAUiB,KAAKC,OAAa,OAAPL,QAAO,IAAPA,GAAA,UAAAA,EAASM,YAAT,eAAeC,MAAO,KAA3C,WADF,sBAEWP,QAFX,IAEWA,OAFX,EAEWA,EAASA,QAAQ,GAAGQ,gBAE/B,cAACnB,EAAD,CAAalB,IAAKc,EAAY,OAACe,QAAD,IAACA,OAAD,EAACA,EAASA,QAAQ,GAAGE,WAErD,cAAChB,EAAD,2BAAcc,QAAd,IAAcA,OAAd,EAAcA,EAASH,KAAvB,oBAAgCG,QAAhC,IAAgCA,GAAhC,UAAgCA,EAASS,WAAzC,aAAgC,EAAcC,WAE9C,cAACtB,EAAD,2BACA,eAACI,EAAD,WACE,cAAC,EAAD,CAAsBK,KAAMI,EAAQ,SAAW,UAC7CxB,MAAK,WAjBIsB,EAiBQ,OAACC,QAAD,IAACA,OAAD,EAACA,EAASS,IAAIR,EAAQ,SAAW,WAhBlD,GAAN,OAAU,IAAIU,KAAiB,IAAZZ,GAAkBa,WAArC,cAAqD,IAAID,KAAiB,IAAZZ,GAAkBc,kBAiB5E,cAAC,EAAD,CAAsBhB,KAAM,WAAYpB,MAAK,OAAEuB,QAAF,IAAEA,GAAF,UAAEA,EAASM,YAAX,aAAE,EAAexB,WAC9D,cAAC,EAAD,CAAsBe,KAAM,OAAQpB,MAAK,OAAEuB,QAAF,IAAEA,GAAF,UAAEA,EAASjB,YAAX,aAAE,EAAe+B,QAC1D,cAAC,EAAD,CAAsBjB,KAAM,WAAYpB,MAAK,OAAEuB,QAAF,IAAEA,GAAF,UAAEA,EAASM,YAAX,aAAE,EAAetB,kBC1HhE+B,EAAYtD,IAAO8B,IAAV,oQAcTyB,EAAWvD,IAAOG,KAAV,uFAgCCqD,MAzBf,WAAgB,IAAD,EACaC,qBADb,mBACNC,EADM,KACDlD,EADC,OAEmBiD,qBAFnB,mBAENlB,EAFM,KAEEoB,EAFF,KAIPlD,EAAY,uCAAG,WAAOK,GAAP,eAAA8C,EAAA,6DACjB9C,EAAE+C,iBADe,SAEMC,IAAMC,IAAN,4DACgCL,EADhC,kBA5Bb,qCA0BO,OAEXM,EAFW,OAIfL,EAAcK,EAASC,MAJR,2CAAH,sDAMlB,OACE,mCACE,eAACX,EAAD,WACE,cAACC,EAAD,gCAEChB,EACG,cAAC,EAAD,CAAkBA,QAASA,IAE3B,cAAC,EAAD,CAAe/B,WAAYA,EAAYC,aAAcA,UCxCjEyD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.944370b0.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst WeatherLogo = styled.img `\r\n    width: 140px;\r\n    height: 140px;\r\n    margin: 40px auto;\r\n`;\r\n\r\nconst ChooseCityLabel = styled.span`\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 10px auto;\r\n`;\r\n\r\nconst SearchBox = styled.form`\r\n    display: flex;\r\n    flex-direction: row;\r\n    border: black solid 1px;\r\n    border-radius: 2px;\r\n    color: black;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    margin: 2px auto;\r\n    \r\n    & input{\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        border: none;\r\n        outline: none;\r\n        font-weight: bold;\r\n    }\r\n\r\n    & button {\r\n        padding: 10px;\r\n        font-size: 14px;\r\n        color: white;\r\n        background-color: black;\r\n        border: none;\r\n        outline: none;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\n\r\nconst CityComponent = (props)=>{\r\n    const {updateCity, fetchWeather} = props;\r\n    return (\r\n        <>\r\n            <WeatherLogo src=\"icons/perfect-day.svg\"/>\r\n            <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\r\n            <SearchBox onSubmit={fetchWeather}>\r\n                <input \r\n                    placeholder=\"City\" \r\n                    onChange={(e)=>updateCity(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Search</button>\r\n            </SearchBox>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CityComponent;","import styled from \"styled-components\";\r\n\r\nexport const WeatherInfoIcons = {\r\n  sunset: \"/icons/temp.svg\",\r\n  sunrise: \"/icons/temp.svg\",\r\n  humidity: \"/icons/humidity.svg\",\r\n  wind: \"/icons/wind.svg\",\r\n  pressure: \"/icons/pressure.svg\",\r\n};\r\n\r\nexport const WeatherIcons = {\r\n  \"01d\" : \"/icons/sunny.svg\",\r\n  \"01n\": \"/icons/night.svg\",\r\n  \"02d\": \"/icons/day.svg\",\r\n  \"02n\": \"/icons/cloudy-night.svg\",\r\n  \"03d\": \"/icons/cloudy.svg\",\r\n  \"03n\": \"/icons/cloudy.svg\",\r\n  \"04d\": \"/icons/perfect-day.svg\",\r\n  \"04n\": \"/icons/cloudy-night.svg\",\r\n  \"09d\": \"/icons/rain.svg\",\r\n  \"09n\": \"/icons/rain-night.svg\",\r\n  \"010d\": \"/icons/rain.svg\",\r\n  \"010n\": \"/icons/rain-night.svg\",\r\n  \"011d\": \"/icons/storm.svg\",\r\n  \"011n\": \"/icons/storm.svg\",\r\n}\r\n\r\nconst Location = styled.span`\r\n  margin: 15px auto;\r\n  text-transform: capitalize;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n`;\r\nconst Condition = styled.span`\r\n  margin: 20px auto;\r\n  text-transform: capitalize;\r\n  font-size: 14px;\r\n  & span {\r\n    font-size: 28px;\r\n  }\r\n`;\r\nconst WeatherInfoLabel = styled.span`\r\n  margin: 20px 25px 10px;\r\n  text-transform: capitalize;\r\n  text-align: start;\r\n  width: 90%;\r\n  font-weight: bold;\r\n  font-size: 14px;\r\n`;\r\nconst WeatherIcon = styled.img`\r\n  width: 100px;\r\n  height: 100px;\r\n  margin: 5px auto;\r\n`;\r\nconst WeatherContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  margin: 30px auto;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nconst WeatherInfoContainer = styled.div`\r\n  display: flex;\r\n  width: 90%;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;\r\nconst InfoContainer = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst InfoIcon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst InfoLabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n  const { name, value } = props;\r\n  return (\r\n    <InfoContainer>\r\n      <InfoIcon src={WeatherInfoIcons[name]} />\r\n      <InfoLabel>\r\n        {value}\r\n        <span>{name}</span>\r\n      </InfoLabel>\r\n    </InfoContainer>\r\n  );\r\n}\r\n\r\nconst WeatherComponent = (props) => {\r\n  const {weather} = props;\r\n  const isDay = weather?.weather[0].icon?.includes('d');\r\n  const getTime = (timeStamp) => {\r\n    return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n  }\r\n  return (\r\n    <>\r\n      <WeatherContainer>\r\n        <Condition>\r\n          <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n          {`  |  ${weather?.weather[0].description}`}\r\n        </Condition>\r\n        <WeatherIcon src={WeatherIcons[weather?.weather[0].icon]} />\r\n      </WeatherContainer>\r\n      <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n\r\n      <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\r\n      <WeatherInfoContainer>\r\n        <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\r\n          value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`} />\r\n        <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity} />\r\n        <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed} />\r\n        <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure} />\r\n      </WeatherInfoContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WeatherComponent;","import styled from \"styled-components\";\nimport CityComponent from \"./modules/CityComponent\";\nimport React,{useState} from \"react\";\nimport axios from \"axios\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nconst API_KEY = \"612b4de95b7452bbfb97cfceb92cb67c\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n  align-items: center;\n  box-shadow: 0 3px 6px 0 #555;\n  padding: 20px 10px;\n  border-radius: 4px;\n  width: 380px;\n  background: white;\n  font-family: Montserrat;\n`;\n\n\nconst AppLabel = styled.span`\n  color: black;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\n\nfunction App() {\n  const [city,updateCity] = useState(); \n  const [weather,updateWeather] = useState(); \n\n  const fetchWeather = async (e) =>{\n      e.preventDefault();\n      const response = await axios.get(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}`);\n        updateWeather(response.data);\n  };\n  return (\n    <>\n      <Container>\n        <AppLabel>React Weather App</AppLabel>\n\n        {weather ?(\n            <WeatherComponent weather={weather}/>\n        ):(\n            <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} /> \n        )}\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}